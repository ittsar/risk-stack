version: '3.9'

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
    command: sh -c "python manage.py wait_for_db --timeout 120 && python manage.py migrate --noinput && python manage.py seed_demo_data && python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped
    volumes:
      - ./backend:/app
    environment:
      DJANGO_SECRET_KEY: change-me
      DJANGO_DEBUG: "True"
      DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1,nginx,backend,risk.rmk.lol
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      CORS_ALLOWED_ORIGINS: http://localhost,http://127.0.0.1,http://localhost:3000,http://127.0.0.1:3000
      CSRF_TRUSTED_ORIGINS: http://localhost,http://127.0.0.1,http://localhost:3000
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
      NODE_OPTIONS: --openssl-legacy-provider
    depends_on:
      - backend
    stdin_open: true
    tty: true

  nginx:
    image: nginx:alpine
    ports:
      - "12000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres-data:


